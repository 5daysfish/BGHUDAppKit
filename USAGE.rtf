{\rtf1\ansi\ansicpg1252\cocoartf949\cocoasubrtf270
{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\ql\qnatural\pardirnatural

\f0\b\fs24 \cf0 Usage\
\

\b0 All of these controls can be used by changing the Cell Class in IB.\
\
The one exception to the rule is when you use Checks or Radios inside of a NSMatrix.  Due to the way these are made by Apple they don't respond initially.  In IB switch the Style of the button from Check to Radio, or Radio to Check and then back the the actual style you want.  It should work fine.\
\

\b Themeing\
\

\b0 When you first change the class to a BGHUD* class and run you will see that the appearance hasn't changed.  You need to drag an Object Controller to your NIB and set it's class to either BGThemeManager or BGGradientTheme.  Each BGHUD* control has a themeManager Outlet in IB.  Connect that outlet to the Object Controller you just created.  Now build and go and you'll see the change.\
\

\b Subclassing
\b0 \
\
I created the BGThemeManager class so that you can subclass it.  Just create a subclass of BGThemeManager, change the NSColors and or NSGradients to whatever values you want.  Then connect your controls to your own subclass (after you've instantiated it in IB of course) and they will take on your look.  Using the ThemeManager objects you can have several different styles of controls to suit your needs. }